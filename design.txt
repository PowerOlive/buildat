Buildat
=======
A Minecraft clone with vast extendability.

License: MIT

Client
------
Built using Polycode C++.

Module code is transfered from the server and run in a safe Lua sandbox.

Server
------
Built using C++ with most functionality in RCC++.

C++ modules can interface with each other by using Cereal.

Module structure
----------------
module
|-- client
|   `-- init.lua  << Client-side code
|-- server
|   `-- init.cpp  << Server-side code
|-- include
|   `-- api.h     << Structures for interfacing between modules
`-- data
    `-- media.png << Data files

Module behavior
---------------
All client scripts are automatically sent to the client. Everything else is
handled by the module implementation.

Modules cannot be unloaded at runtime. Module unload and reload can be simulated
by restarting the server and clients automatically while keeping connections
open. This requires POLYCODE_CORE to be recreated.

The first module to be loaded is called __loader. It loads all other modules.

C++ modules can use the core/ and interface/ headers. Everything else is
considered unstable.

Network protocol
----------------
(Type, length, data) tuples on TCP. In the future TLS can be taken into use. A
name->type registry is used for determining numeric packet types.

Data is freeform. Types 0...100 are reserved for initialization.

Core uses cereal's portable binary serialization.


